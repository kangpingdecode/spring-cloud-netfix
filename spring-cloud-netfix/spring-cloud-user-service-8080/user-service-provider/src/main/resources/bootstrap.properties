
# 注册服务地址
eureka.client.service-url.defaultZone = http://localhost:9090/eureka
eureka.client.fetch-registry=true

# 开启远程拉取配置
spring.cloud.config.discovery.enabled=true
# config 服务的应用名称
spring.cloud.config.discovery.service-id=spring-cloud-config-server-9091


# 开放端点 refresh主动刷新，hystrix.stream 用来hystrix dashboard监控
management.endpoints.web.exposure.include= refresh,hystrix.stream


# 打开熔断
feign.hystrix.enabled=true

# hystrix全局的配置
# 开启超时降级
hystrix.command.default.execution.timeout.enabled=true
# 开启超时时间为3秒钟
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=3000

# 针对方法配置
#hystrix.command.OrderServiceFeign#getOrder().execution.isolation.thread.timeoutInMilliseconds=1000

#hystrix.command.OrderServiceFeign#getOrder().execution.isolation.thread.timeoutInMilliseconds=1000
# 信号量隔离
hystrix.command.OrderServiceFeign#getOrder().execution.isolation.strategy=SEMAPHORE 
# 最大并发请求数
hystrix.command.OrderServiceFeign#getOrder().execution.isolation.semaphore.maxConcurrentRequests=10

# 线程池隔离
hystrix.command.OrderServiceFeign#addOrder().execution.isolation.strategy=THREAD
# 核心线程数
hystrix.threadpool.order-service.coreSize=10
# 最大的队列长度
hystrix.threadpool.order-service.maxQueueSize=1000
# 队列大小超过800 拒绝请求
hystrix.threadpool.order-service.queueSizeRejectionThreshold=800


# 为了让hystrix超时降级起效,我们把ribbon的时间调大，让他大于hystrix的超时时间
# 请求超时配置
ribbon.ReadTimeout=5000
ribbon.SocketTimeout = 5000
ribbon.ConnectTimeout= 5000
# 对当前实例的重试次数，默认0
ribbon.MaxAutoRetries=0
    # 对切换实例的重试次数，默认1
ribbon.MaxAutoRetriesNextServer: 1
    # 对所有操作请求都进行重试,默认false
ribbon.OkToRetryOnAllOperations: false

